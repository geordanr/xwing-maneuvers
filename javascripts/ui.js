// Generated by CoffeeScript 1.6.3
(function() {
  var exportObj;

  exportObj = typeof exports !== "undefined" && exports !== null ? exports : this;

  exportObj.ManeuversUI = (function() {
    function ManeuversUI(args) {
      var _this = this;
      this.stage = args.stage;
      this.panel = $(args.panel);
      this.barrelroll_template_layer = new Kinetic.Layer({
        name: 'barrelroll_template',
        draggable: true
      });
      this.stage.add(this.barrelroll_template_layer);
      this.barrelroll_base_layer = new Kinetic.Layer({
        name: 'barrelroll_base',
        draggable: true
      });
      this.stage.add(this.barrelroll_base_layer);
      this.barrelroll_movement = null;
      this.barrelroll_start_base = null;
      this.ships = [];
      this.selected_ship = null;
      this.colorpicker = $(args.colorpicker).ColorPicker({
        flat: true,
        color: '000000',
        onChange: function(hsv, hex, rgb) {
          return _this.selectedColor = "#" + hex;
        }
      });
      this.headinginput = $(this.panel.find('.heading'));
      this.headinginput.change(function(e) {
        if (_this.headinginput.val() < 0) {
          _this.headinginput.val(0);
        }
        if (_this.headinginput.val() > 359) {
          _this.headinginput.val(359);
        }
        if (_this.headinginput.val() !== _this.headingslider.slider('value')) {
          _this.headingslider.slider('value', parseInt(_this.headinginput.val()));
          return $(exportObj).trigger('xwm:shipRotated', parseInt(_this.headinginput.val()));
        }
      });
      this.headingslider = this.panel.find('.heading-slider').slider({
        min: 0,
        max: 359,
        change: function(e, ui) {
          if (parseInt(_this.headinginput.val()) !== _this.headingslider.slider('value')) {
            _this.headinginput.val(_this.headingslider.slider('value'));
            return _this.headinginput.change();
          }
        },
        slide: function(e, ui) {
          if (parseInt(_this.headinginput.val()) !== ui.value) {
            _this.headinginput.val(ui.value);
            return _this.headinginput.change();
          }
        }
      });
      this.shipnameinput = $(this.panel.find('.shipname'));
      this.islargecheckbox = $(this.panel.find('.isLarge'));
      this.shiplist_element = $(this.panel.find('.shiplist'));
      this.maneuvers_element = $(this.panel.find('.maneuvers'));
      this.turnlist_element = $(this.panel.find('.turnlist'));
      this.addshipbtn = $(this.panel.find('.addship'));
      this.addshipbtn.click(function(e) {
        var ship;
        e.preventDefault();
        ship = new Ship({
          stage: stage,
          name: _this.shipnameinput.val(),
          size: _this.islargecheckbox.prop('checked') ? 'large' : 'small',
          x: _this.stage.width() / 2,
          y: _this.stage.height() / 2,
          heading_deg: 0,
          draw_options: {
            show_final_maneuver_only: _this.panel.find('.toggle-final-positions').prop('checked'),
            show_movement_templates: _this.panel.find('.toggle-templates').prop('checked'),
            show_last_turn_only: _this.panel.find('.toggle-last-turn').prop('checked')
          }
        });
        ship.setDrawOptions({
          kinetic_draw_args: {
            stroke: _this.selectedColor
          }
        });
        ship.draw();
        return _this.addShip(ship);
      });
      this.panel.find('.show-when-ship-selected').hide();
      this.panel.find('.show-during-barrel-roll').hide();
      this.maneuvers_element.hide();
      this.panel.find('.lock-template').hide();
      this.panel.find('.lock-template').click(function(e) {
        e.preventDefault();
        return $(exportObj).trigger('xwm:finalizeBarrelRollTemplate');
      });
      this.panel.find('.lock-base').hide();
      this.panel.find('.lock-base').click(function(e) {
        e.preventDefault();
        return $(exportObj).trigger('xwm:finalizeBarrelRoll');
      });
      this.panel.find('.toggle-deploy').change(function(e) {
        e.preventDefault();
        return _this.stage.find('.deployareas').visible($(e.target).prop('checked'));
      });
      this.panel.find('.toggle-deploy').change();
      this.panel.find('.toggle-asteroid-area').change(function(e) {
        e.preventDefault();
        return _this.stage.find('.asteroidarea').visible($(e.target).prop('checked'));
      });
      this.panel.find('.toggle-asteroid-area').change();
      this.panel.find('.toggle-grid').change(function(e) {
        e.preventDefault();
        return _this.stage.find('.grid').visible($(e.target).prop('checked'));
      });
      this.panel.find('.toggle-grid').change();
      this.panel.find('.toggle-templates').change(function(e) {
        e.preventDefault();
        return $(exportObj).trigger('xwm:showMovementTemplates', $(e.target).prop('checked'));
      });
      this.panel.find('.toggle-templates').change();
      this.panel.find('.toggle-final-positions').change(function(e) {
        e.preventDefault();
        return $(exportObj).trigger('xwm:showFinalManeuverOnly', $(e.target).prop('checked'));
      });
      this.panel.find('.toggle-final-positions').change();
      this.panel.find('.toggle-last-turn').change(function(e) {
        e.preventDefault();
        return $(exportObj).trigger('xwm:showLastTurnOnly', $(e.target).prop('checked'));
      });
      this.panel.find('.toggle-last-turn').change();
      this.panel.find('.clone-ship').click(function(e) {
        return $(exportObj).trigger('xwm:cloneShip', _this.selected_ship);
      });
      this.panel.find('.select-none').click(function(e) {
        return $(exportObj).trigger('xwm:shipSelected', null);
      });
      this.panel.find('.add-turn').click(function(e) {
        var newturn;
        if (_this.selected_ship != null) {
          newturn = _this.selected_ship.addTurn();
          return $(exportObj).trigger('xwm:turnSelected', newturn);
        }
      });
      $(exportObj).on('xwm:drawOptionsChanged', function(e, options) {
        var ship, _i, _len, _ref, _results;
        _ref = _this.ships;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          ship = _ref[_i];
          ship.setDrawOptions(options);
          _results.push(ship.draw());
        }
        return _results;
      }).on('xwm:shipSelected', function(e, ship) {
        if (_this.selected_ship !== ship) {
          if (_this.selected_ship != null) {
            _this.selected_ship.setDrawOptions({
              kinetic_draw_args: {
                fill: ''
              }
            });
            _this.selected_ship.draw();
            _this.selected_ship.deselect();
          }
          _this.selected_ship = ship;
          if (_this.selected_ship != null) {
            _this.selected_ship.setDrawOptions({
              kinetic_draw_args: {
                fill: '#ddd'
              }
            });
            _this.selected_ship.moveToTop();
            _this.selected_ship.draw();
            _this.selected_ship.select();
            _this.headingslider.slider('value', _this.selected_ship.layer.rotation());
          }
          return _this.panel.find('.show-when-ship-selected').toggle(_this.selected_ship != null);
        }
      }).on('xwm:shipRotated', function(e, heading_deg) {
        if ((_this.selected_ship != null) && _this.selected_ship.layer.rotation() !== heading_deg) {
          _this.selected_ship.layer.rotation(heading_deg);
          _this.selected_ship.draw();
          if (heading_deg !== parseInt(_this.headinginput.val())) {
            _this.headinginput.val(heading_deg);
            return _this.headingslider.slider('value', heading_deg);
          }
        }
      }).on('xwm:movementClicked', function(e, args) {
        _this.turnlist_element.show();
        _this.maneuvers_element.hide();
        if (args.direction.indexOf('barrelroll') !== -1 || args.direction.indexOf('decloak-left') !== -1 || args.direction.indexOf('decloak-right') !== -1) {
          _this.panel.find('.lock-template').show();
          _this.panel.find('.show-during-barrel-roll').show();
          return _this.panel.find('.hide-during-barrel-roll').hide();
        }
      }).on('xwm:barrelRollTemplateOffsetChanged', function(e, offset) {
        return _this.barrelroll_start_offset = offset;
      }).on('xwm:barrelRollEndBaseOffsetChanged', function(e, offset) {
        return _this.barrelroll_end_offset = offset;
      }).on('xwm:finalizeBarrelRollTemplate', function(e) {
        var barrelroll_end_base, transform, _heading_deg, _ref;
        _this.panel.find('.lock-template').hide();
        _this.panel.find('.lock-base').show();
        _this.barrelroll_template_layer.draggable(false);
        _this.barrelroll_movement.start_distance_from_front = _this.barrelroll_start_offset;
        barrelroll_end_base = _this.barrelroll_start_base.newBaseFromMovement(_this.barrelroll_movement);
        barrelroll_end_base.draw(_this.barrelroll_base_layer);
        _ref = _this.barrelroll_movement.getBaseTransformAndHeading(_this.barrelroll_start_base), transform = _ref.transform, _heading_deg = _ref._heading_deg;
        return (function(transform) {
          return _this.barrelroll_base_layer.dragBoundFunc(function(pos) {
            var drag_pos, new_pos;
            pos.y = Math.min(pos.y, 0);
            pos.y = Math.max(pos.y, -(_this.barrelroll_start_base.width - exportObj.TEMPLATE_WIDTH));
            $(exportObj).trigger('xwm:barrelRollEndBaseOffsetChanged', Math.abs(pos.y));
            drag_pos = transform.point(pos);
            new_pos = transform.point({
              x: pos.x,
              y: 0
            });
            return {
              x: drag_pos.x - new_pos.x,
              y: drag_pos.y - new_pos.y
            };
          });
        })(transform);
      }).on('xwm:finalizeBarrelRoll', function(e) {
        _this.panel.find('.lock-base').hide();
        _this.panel.find('.hide-during-barrel-roll').show();
        _this.panel.find('.show-during-barrel-roll').hide();
        _this.barrelroll_movement.end_distance_from_front = _this.barrelroll_end_offset;
        return $(exportObj).trigger('xwm:executeBarrelRoll', _this.barrelroll_movement);
      }).on('xwm:cloneShip', function(e, ship) {
        return _this.addShip(ship.clone());
      }).on('xwm:resetBarrelRollData', function(e, cb) {
        var layer, _i, _len, _ref;
        _ref = [_this.barrelroll_base_layer, _this.barrelroll_template_layer];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          layer = _ref[_i];
          layer.draggable(true);
          layer.x(0);
          layer.y(0);
          layer.clear();
          layer.destroyChildren();
          layer.moveToTop();
        }
        _this.barrelroll_movement = null;
        _this.barrelroll_start_base = null;
        _this.barrelroll_start_offset = null;
        _this.barrelroll_end_offset = null;
        return cb(_this.barrelroll_template_layer);
      }).on('xwm:initiateBarrelRoll', function(e, start_base, movement) {
        var template;
        _this.barrelroll_start_base = start_base;
        _this.barrelroll_movement = movement;
        template = _this.barrelroll_movement.getTemplateForBase(_this.barrelroll_start_base);
        return template.draw(_this.barrelroll_template_layer, {
          kinetic_draw_args: {
            fill: '#666'
          }
        });
      }).on('xwm:showMovementSelections', function(e, args) {
        _this.turnlist_element.hide();
        _this.maneuvers_element.find('.movement').show();
        _this.maneuvers_element.find('.nonmovement').hide();
        return _this.maneuvers_element.show();
      }).on('xwm:showBarrelRollSelections', function(e, args) {
        _this.turnlist_element.hide();
        _this.maneuvers_element.find('.movement').hide();
        _this.maneuvers_element.find('.nonmovement, .nonmovement td').hide();
        _this.maneuvers_element.find('tr.nonmovement.barrelroll, td.barrelroll').show();
        return _this.maneuvers_element.show();
      }).on('xwm:showDecloakSelections', function(e, args) {
        _this.turnlist_element.hide();
        _this.maneuvers_element.find('.movement').hide();
        _this.maneuvers_element.find('.nonmovement, .nonmovement td').hide();
        _this.maneuvers_element.find('tr.nonmovement.decloak, td.decloak').show();
        return _this.maneuvers_element.show();
      }).on('xwm:showBoostSelections', function(e, args) {
        _this.turnlist_element.hide();
        _this.maneuvers_element.find('.movement').hide();
        _this.maneuvers_element.find('.nonmovement, .nonmovement td').hide();
        _this.maneuvers_element.find('tr.nonmovement.boost, td.boost').show();
        return _this.maneuvers_element.show();
      }).on('xwm:showDaredevilSelections', function(e, args) {
        _this.turnlist_element.hide();
        _this.maneuvers_element.find('.movement').hide();
        _this.maneuvers_element.find('.nonmovement, .nonmovement td').hide();
        _this.maneuvers_element.find('tr.nonmovement.daredevil, td.daredevil').show();
        return _this.maneuvers_element.show();
      }).on('xwm:destroyShip', function(e, ship) {
        var idx;
        idx = _this.ships.indexOf(ship);
        if (idx !== -1) {
          _this.ships.splice(idx, 1);
        }
        return $(exportObj).trigger('xwm:shipSelected', null);
      });
    }

    ManeuversUI.prototype.addShip = function(ship) {
      this.ships.push(ship);
      this.shiplist_element.append(ship.shiplist_element);
      this.turnlist_element.append(ship.turnlist_element);
      return $(exportObj).trigger('xwm:shipSelected', ship);
    };

    return ManeuversUI;

  })();

}).call(this);

/*
//@ sourceMappingURL=ui.map
*/
