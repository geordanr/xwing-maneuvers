// Generated by CoffeeScript 1.6.3
(function() {
  var exportObj;

  exportObj = typeof exports !== "undefined" && exports !== null ? exports : this;

  exportObj.RangeBand = (function() {
    function RangeBand(args) {
      this.base = args.base;
      this.group = new Kinetic.Group({
        name: 'range_group',
        x: this.base.position.x,
        y: this.base.position.y,
        rotation: this.base.position.heading_deg
      });
      this.addRangeBandAtRange(exportObj.RANGE1, 0.2);
    }

    RangeBand.prototype.addRangeBandAtRange = function(range, alpha) {
      this.group.add(new Kinetic.Arc({
        name: 'range_arc',
        x: this.base.width / 2,
        y: -this.base.width / 2,
        angle: 90,
        innerRadius: 0,
        outerRadius: range,
        fillRed: 255,
        fillAlpha: alpha,
        rotationDeg: -90
      }));
      this.group.add(new Kinetic.Arc({
        name: 'range_rect',
        x: this.base.width / 2,
        y: this.base.width / 2,
        angle: 90,
        innerRadius: 0,
        outerRadius: range,
        fillBlue: 255,
        fillAlpha: alpha
      }));
      return this.group.add(new Kinetic.Rect({
        name: 'range_arc',
        x: this.base.width / 2,
        y: -this.base.width / 2,
        width: range,
        height: this.base.width,
        fillGreen: 255,
        fillAlpha: alpha
      }));
    };

    RangeBand.prototype.destroy = function() {};

    RangeBand.prototype.draw = function(layer) {
      var child, _i, _len, _ref, _results;
      if (layer == null) {
        layer = this.base.group.getLayer();
      }
      layer.add(this.group);
      _ref = this.group.children;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        child = _ref[_i];
        _results.push(child.draw());
      }
      return _results;
    };

    return RangeBand;

  })();

}).call(this);

/*
//@ sourceMappingURL=rangeband.map
*/
