// Generated by CoffeeScript 1.6.3
(function() {
  var exportObj;

  exportObj = typeof exports !== "undefined" && exports !== null ? exports : this;

  exportObj.RangeBand = (function() {
    function RangeBand(args) {
      var _ref;
      this.base = args.base;
      this.group = new Kinetic.Group({
        name: 'range_group',
        x: this.base.position.x,
        y: this.base.position.y,
        rotation: this.base.position.heading_deg,
        listening: false
      });
      this.layer = (_ref = args.layer) != null ? _ref : this.base.group.getLayer();
      this.layer.add(this.group);
      this.isVisible = false;
      this.addRangeBandAtRange(exportObj.RANGE1, 0.3);
      this.addRangeBandAtRange(exportObj.RANGE2, 0.2);
      this.addRangeBandAtRange(exportObj.RANGE3, 0.1);
    }

    RangeBand.prototype.addRangeBandAtRange = function(range, alpha) {
      this.group.add(new Kinetic.Arc({
        name: 'range_arc',
        x: this.base.width / 2,
        y: -this.base.width / 2,
        angle: 90,
        innerRadius: 0,
        outerRadius: range,
        fillBlue: 255,
        fillAlpha: alpha,
        rotationDeg: -90
      }));
      this.group.add(new Kinetic.Arc({
        name: 'range_arc',
        x: this.base.width / 2,
        y: this.base.width / 2,
        angle: 90,
        innerRadius: 0,
        outerRadius: range,
        fillBlue: 255,
        fillAlpha: alpha
      }));
      this.group.add(new Kinetic.Arc({
        name: 'range_arc',
        x: -this.base.width / 2,
        y: this.base.width / 2,
        angle: 90,
        innerRadius: 0,
        outerRadius: range,
        fillBlue: 255,
        fillAlpha: alpha,
        rotationDeg: 90
      }));
      this.group.add(new Kinetic.Arc({
        name: 'range_arc',
        x: -this.base.width / 2,
        y: -this.base.width / 2,
        angle: 90,
        innerRadius: 0,
        outerRadius: range,
        fillBlue: 255,
        fillAlpha: alpha,
        rotationDeg: 180
      }));
      this.group.add(new Kinetic.Rect({
        name: 'range_rect',
        x: this.base.width / 2,
        y: -this.base.width / 2,
        width: range,
        height: this.base.width,
        fillBlue: 255,
        fillAlpha: alpha
      }));
      this.group.add(new Kinetic.Rect({
        name: 'range_rect',
        x: -(this.base.width / 2) - range,
        y: -this.base.width / 2,
        width: range,
        height: this.base.width,
        fillBlue: 255,
        fillAlpha: alpha
      }));
      this.group.add(new Kinetic.Rect({
        name: 'range_rect',
        x: -this.base.width / 2,
        y: this.base.width / 2,
        width: this.base.width,
        height: range,
        fillBlue: 255,
        fillAlpha: alpha
      }));
      return this.group.add(new Kinetic.Rect({
        name: 'range_rect',
        x: -this.base.width / 2,
        y: -(this.base.width / 2) - range,
        width: this.base.width,
        height: range,
        fillBlue: 255,
        fillAlpha: alpha
      }));
    };

    RangeBand.prototype.destroy = function() {
      return this.group.destroy();
    };

    RangeBand.prototype.draw = function() {
      this.layer.clear();
      if (this.isVisible) {
        this.group.show();
      } else {
        this.group.hide();
      }
      this.layer.draw();
      return this;
    };

    RangeBand.prototype.hide = function() {
      this.isVisible = false;
      return this.draw();
    };

    RangeBand.prototype.show = function() {
      this.isVisible = true;
      return this.draw();
    };

    RangeBand.prototype.toggle = function() {
      if (this.isVisible) {
        return this.hide();
      } else {
        return this.show();
      }
    };

    return RangeBand;

  })();

}).call(this);

/*
//@ sourceMappingURL=rangeband.map
*/
