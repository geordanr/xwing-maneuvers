// Generated by CoffeeScript 1.6.3
(function() {
  var exportObj;

  exportObj = typeof exports !== "undefined" && exports !== null ? exports : this;

  exportObj.ManeuverGrid = (function() {
    function ManeuverGrid(args) {
      this.container = $(args.container);
      this.makeManeuverGrid();
      this.setupHandlers();
    }

    ManeuverGrid.makeManeuverIcon = function(template, args) {
      var color, linePath, outlineColor, rotate, svg, transform, trianglePath, _ref, _ref1;
      if (args == null) {
        args = {};
      }
      color = (_ref = args.color) != null ? _ref : 'black';
      rotate = (_ref1 = args.rotate) != null ? _ref1 : null;
      if (template === 'stop') {
        svg = "<rect x=\"50\" y=\"50\" width=\"100\" height=\"100\" style=\"fill:" + color + "\" />";
      } else {
        outlineColor = "black";
        transform = "";
        switch (template) {
          case 'turnleft':
            linePath = "M160,180 L160,70 80,70";
            trianglePath = "M80,100 V40 L30,70 Z";
            break;
          case 'bankleft':
            linePath = "M150,180 S150,120 80,60";
            trianglePath = "M80,100 V40 L30,70 Z";
            transform = "transform='translate(-5 -15) rotate(45 70 90)' ";
            break;
          case 'straight':
            linePath = "M100,180 L100,100 100,80";
            trianglePath = "M70,80 H130 L100,30 Z";
            break;
          case 'bankright':
            linePath = "M50,180 S50,120 120,60";
            trianglePath = "M120,100 V40 L170,70 Z";
            transform = "transform='translate(5 -15) rotate(-45 130 90)' ";
            break;
          case 'turnright':
            linePath = "M40,180 L40,70 120,70";
            trianglePath = "M120,100 V40 L170,70 Z";
            break;
          case 'kturn':
          case 'koiogran':
          case 'uturn':
            linePath = "M50,180 L50,100 C50,10 140,10 140,100 L140,120";
            trianglePath = "M170,120 H110 L140,180 Z";
            break;
          default:
            throw new Error("Invalid movement icon " + template);
        }
        svg = $.trim("<path d='" + trianglePath + "' fill='" + color + "' stroke-width='5' stroke='" + outlineColor + "' " + transform + "/>\n<path stroke-width='25' fill='none' stroke='" + outlineColor + "' d='" + linePath + "' />\n<path stroke-width='15' fill='none' stroke='" + color + "' d='" + linePath + "' />");
      }
      if (rotate != null) {
        svg = $.trim("<g transform=\"rotate(" + (parseInt(rotate)) + " 100 100)\">" + svg + "</g>");
      }
      return "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30px\" height=\"30px\" viewBox=\"0 0 200 200\">" + svg + "</svg>";
    };

    ManeuverGrid.prototype.makeManeuverGrid = function() {
      var speed, table, _i;
      table = '<table class="maneuvergrid">';
      for (speed = _i = 5; _i >= 0; speed = --_i) {
        table += "<tr class=\"movement speed-" + speed + "\">";
        table += speed > 0 && speed < 4 ? $.trim("<td data-speed=\"" + speed + "\" data-direction=\"turnleft\">" + (exportObj.ManeuverGrid.makeManeuverIcon('turnleft')) + "</td>\n<td data-speed=\"" + speed + "\" data-direction=\"bankleft\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankleft')) + "</td>") : "<td>&nbsp;</td><td>&nbsp;</td>";
        table += speed > 0 ? $.trim("<td data-speed=\"" + speed + "\" data-direction=\"straight\">" + (exportObj.ManeuverGrid.makeManeuverIcon('straight')) + "</td>") : $.trim("<td data-direction=\"stop\">" + (exportObj.ManeuverGrid.makeManeuverIcon('stop')) + "</td>");
        table += speed > 0 && speed < 4 ? $.trim("<td data-speed=\"" + speed + "\" data-direction=\"bankright\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankright')) + "</td>\n<td data-speed=\"" + speed + "\" data-direction=\"turnright\">" + (exportObj.ManeuverGrid.makeManeuverIcon('turnright')) + "</td>") : "<td>&nbsp;</td><td>&nbsp;</td>";
        table += speed > 0 ? $.trim("<td data-speed=\"" + speed + "\" data-direction=\"koiogran\">" + (exportObj.ManeuverGrid.makeManeuverIcon('kturn')) + "</td>") : "<td>&nbsp;</td>";
      }
      table += $.trim("<tr class=\"nonmovement decloak\">\n  <td>&nbsp;</td>\n  <td class=\"decloak\" data-speed=\"2\" data-direction=\"decloak-forward-left\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankleft')) + "</td>\n  <td>&nbsp;</td>\n  <td class=\"decloak\" data-speed=\"2\" data-direction=\"decloak-forward-right\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankright')) + "</td>\n  <td>&nbsp;</td>\n</tr>\n\n<tr class=\"nonmovement daredevil boost\">\n  <td class=\"daredevil\" data-speed=\"1\" data-direction=\"daredevil-left\">" + (exportObj.ManeuverGrid.makeManeuverIcon('turnleft')) + "</td>\n  <td class=\"boost\" data-speed=\"1\" data-direction=\"boost-left\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankleft')) + "</td>\n  <td class=\"boost\" data-speed=\"1\" data-direction=\"boost\">" + (exportObj.ManeuverGrid.makeManeuverIcon('straight')) + "</td>\n  <td class=\"boost\" data-speed=\"1\" data-direction=\"boost-right\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankright')) + "</td>\n  <td class=\"daredevil\" data-speed=\"1\" data-direction=\"daredevil-right\">" + (exportObj.ManeuverGrid.makeManeuverIcon('turnright')) + "</td>\n  <td>&nbsp;</td>\n  <td>&nbsp;</td>\n</tr>\n\n<tr class=\"nonmovement decloak barrelroll\">\n  <td class=\"decloak\" data-direction=\"decloak-leftforward\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankright', {
        rotate: -90
      })) + "</td>\n  <td class=\"barrelroll\" data-direction=\"barrelroll-leftforward\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankright', {
        rotate: -90
      })) + "</td>\n  <td>&nbsp;</td>\n  <td class=\"barrelroll\" data-direction=\"barrelroll-rightforward\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankleft', {
        rotate: 90
      })) + "</td>\n  <td class=\"decloak\" data-direction=\"decloak-rightforward\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankleft', {
        rotate: 90
      })) + "</td>\n  <td>&nbsp;</td>\n</tr>\n\n<tr class=\"nonmovement decloak barrelroll\">\n  <td class=\"decloak\" data-direction=\"decloak-left\">" + (exportObj.ManeuverGrid.makeManeuverIcon('straight', {
        rotate: -90
      })) + "</td>\n  <td class=\"barrelroll\" data-direction=\"barrelroll-left\">" + (exportObj.ManeuverGrid.makeManeuverIcon('straight', {
        rotate: -90
      })) + "</td>\n  <td>&nbsp;</td>\n  <td class=\"barrelroll\" data-direction=\"barrelroll-right\">" + (exportObj.ManeuverGrid.makeManeuverIcon('straight', {
        rotate: 90
      })) + "</td>\n  <td class=\"decloak\" data-direction=\"decloak-right\">" + (exportObj.ManeuverGrid.makeManeuverIcon('straight', {
        rotate: 90
      })) + "</td>\n  <td>&nbsp;</td>\n</tr>\n\n<tr class=\"nonmovement decloak barrelroll\">\n  <td class=\"decloak\" data-speed=\"2\" data-direction=\"decloak-leftbackward\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankleft', {
        rotate: -90
      })) + "</td>\n  <td class=\"barrelroll\" data-speed=\"1\" data-direction=\"barrelroll-leftbackward\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankleft', {
        rotate: -90
      })) + "</td>\n  <td>&nbsp;</td>\n  <td class=\"barrelroll\" data-speed=\"1\" data-direction=\"barrelroll-rightbackward\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankright', {
        rotate: 90
      })) + "</td>\n  <td class=\"decloak\" data-speed=\"2\" data-direction=\"decloak-rightbackward\">" + (exportObj.ManeuverGrid.makeManeuverIcon('bankright', {
        rotate: 90
      })) + "</td>\n  <td>&nbsp;</td>\n</tr>");
      table += "</table>";
      return this.container.append(table);
    };

    ManeuverGrid.prototype.setupHandlers = function() {
      return this.container.find('td').click(function(e) {
        e.preventDefault();
        if ($(e.delegateTarget).data('direction') != null) {
          return $(exportObj).trigger('xwm:movementClicked', {
            direction: $(e.delegateTarget).data('direction'),
            speed: $(e.delegateTarget).data('speed')
          });
        }
      });
    };

    return ManeuverGrid;

  })();

}).call(this);

/*
//@ sourceMappingURL=maneuvergrid.map
*/
