// Generated by CoffeeScript 1.6.3
(function() {
  var exportObj,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  exportObj = typeof exports !== "undefined" && exports !== null ? exports : this;

  exportObj.movements = {};

  exportObj.MovementList = (function(_super) {
    __extends(MovementList, _super);

    function MovementList(args) {
      MovementList.__super__.constructor.call(this, args);
      this.stage = args.stage;
      this.ship = args.ship;
      this.color = args.color;
      this.layer = new Kinetic.Layer();
      this.stage.add(this.layer);
    }

    MovementList.prototype.drawMoves = function(args) {
      var first, i, last, _i, _ref, _ref1, _ref2, _results;
      first = (_ref = args.first) != null ? _ref : 0;
      last = (_ref1 = args.last) != null ? _ref1 : this.length - 1;
      _ref2 = [Math.min(first, last, 0), Math.max(first, last, this.length - 1)], first = _ref2[0], last = _ref2[1];
      _results = [];
      for (i = _i = first; first <= last ? _i <= last : _i >= last; i = first <= last ? ++_i : --_i) {
        _results.push(this[i].draw());
      }
      return _results;
    };

    MovementList.prototype.addMovement = function(movement) {
      this.push(movement);
      return movement.list = this;
    };

    return MovementList;

  })(Array);

  exportObj.Movement = (function() {
    function Movement(args) {
      this.start_center_x;
      this.before = args.before;
      this.during = args.during;
      this.after = args.after;
    }

    Movement.prototype.draw = function(args) {};

    return Movement;

  })();

}).call(this);

/*
//@ sourceMappingURL=movement.map
*/
